local Player = {}

function Player:new(world)
    local o = {}
    setmetatable(o, self)
    self.__index = self

    o.body = love.physics.newBody(world, wScr/2, 10, "dynamic") --place the body in the center of the world and make it dynamic, so it can move around
    o.sprite = assets.finger
    o.shapeWidth = o.sprite:getWidth()
    o.shapeHeight = o.sprite:getHeight()
    o.body:setFixedRotation(true)
    o.body:setLinearDamping(0.5)
    o.shape = love.physics.newRectangleShape(o.shapeWidth, o.shapeHeight)
    o.fixture = love.physics.newFixture(o.body, o.shape, 1) -- Attach fixture to body and give it a density of 1.
    o.fixture:setRestitution(0.3) --let the ball bounce
    o.fixture:setFriction(0.8)

    return o
end

function Player:update(dt)
    --here we are going to create some keyboard events
    if love.keyboard.isDown("right") then --press the right arrow key to push the ball to the right
      self.body:applyForce(1000, 0)
    elseif love.keyboard.isDown("left") then --press the left arrow key to push the ball to the left
      self.body:applyForce(-1000, 0)
    elseif love.keyboard.isDown("up") then --press the left arrow key to push the ball to the left
      self.body:applyForce(0, -2000)
    elseif love.keyboard.isDown("return") then --press the up arrow key to set the ball in the air
      self.scrollTimer = 0
      self.body:setPosition(wScr / 2, 10)
      self.body:setLinearVelocity(0, 0) --we must set the velocity to zero to prevent a potentially large velocity generated by the change in position
    end

    
    local vx, vy = self.body:getLinearVelocity() 
    if vy < 0 then
        self.body:setLinearVelocity(vx, 0)
    end
end

function Player:draw(dt)
    love.graphics.setColor(0.76, 0.18, 0.05) --set the drawing color to red for the ball
    love.graphics.polygon("fill", self.body:getWorldPoints(self.shape:getPoints()))
end

return Player